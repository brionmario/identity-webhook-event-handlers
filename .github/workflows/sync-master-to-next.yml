name: 🔄 Sync master to next

on:
  pull_request:
    types: [closed]
    branches: [master, main]

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  TARGET_BRANCH: next

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PR_AUTOMATION_BOT_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "wso2-iam-bot"
          git config user.email "wso2-iam-bot@users.noreply.github.com"

      - name: Create sync branch and cherry-pick commits
        env:
          GH_TOKEN: ${{ secrets.PR_AUTOMATION_BOT_TOKEN }}
        run: |
          SYNC_BRANCH="sync-to-${{ env.TARGET_BRANCH }}-${{ github.run_id }}"
          PR_NUMBER=${{ github.event.pull_request.number }}

          git fetch --all
          git checkout -b "$SYNC_BRANCH" "origin/${{ env.TARGET_BRANCH }}"

          COMMITS=$(gh pr view $PR_NUMBER --json commits --jq '.commits[].oid' | tac)

          echo "Cherry-picking commits..."
          CONFLICTS=false
          for commit in $COMMITS; do
            if git show --no-patch --format=%p "$commit" | grep -q " "; then
              echo "Skipping merge commit: $commit"
              continue
            fi
            echo "Cherry-picking: $commit"
            if ! git cherry-pick "$commit"; then
              echo "::warning::Cherry-pick conflict detected for $commit"
              git cherry-pick --abort
              CONFLICTS=true
              break
            fi
          done

          if [ "$CONFLICTS" = true ]; then
            git checkout -B "$SYNC_BRANCH" "origin/${{ env.TARGET_BRANCH }}"
            echo "⚠️ Cherry-pick failed due to conflicts. Creating PR for manual resolution."
          fi

          git push origin "$SYNC_BRANCH"

          PR_BODY="🤖 **Auto-sync from ${{ github.event.pull_request.base.ref }}**
          This PR automatically syncs the changes from #${{ github.event.pull_request.number }} to the \`${{ env.TARGET_BRANCH }}\` branch.

          **Original PR:** ${{ github.event.pull_request.html_url }}
          **Author:** @${{ github.event.pull_request.user.login }}
          **Workflow:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          if [ "$CONFLICTS" = true ]; then
            PR_BODY="$PR_BODY

          ⚠️ **Merge Conflicts Detected**
          This PR requires manual resolution of merge conflicts."
          fi

          PR_BODY="$PR_BODY

          ---

          ${{ github.event.pull_request.body }}"

          gh pr create \
            --base "${{ env.TARGET_BRANCH }}" \
            --head "$SYNC_BRANCH" \
            --title "[Sync][${{ github.event.pull_request.base.ref }} -> ${{
              env.TARGET_BRANCH }}][#${{ github.event.pull_request.number }}]: ${{ github.event.pull_request.title }}" \
            --body "$PR_BODY" \
            --reviewer "${{ github.event.pull_request.user.login }}"
